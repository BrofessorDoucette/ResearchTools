# 10/23/2025


# Equations 
# Energies are in KeV

# Plot options
thickness = "1.8" #in micrometers

d = load_data()
first_df = d[next(iter(d.keys()))]
n_energies = len(d) - 1
n_events = len(first_df)
energies = np.asarray(d["energies"])
n_eqs = 5
eff = np.zeros(shape=(n_energies, n_eqs))
for i, E in enumerate(energies):    
    
    E_df = d[E]
    
    R0 = E_df["detector_0"]
    R1 = E_df["detector_1"]
    R2 = E_df["detector_2"]
    R3 = E_df["detector_3"]
    R4 = E_df["detector_4"]
    R5 = E_df["detector_5"]

    R0 = R0
    R01 = R0 + R1
    R02 = R0 + R1 + R2
    R03 = R0 + R1 + R2 + R3
    R04 = R0 + R1 + R2 + R3 + R4
    R05 = R0 + R1 + R2 + R3 + R4 + R5
    R12 = R1 + R2
    R13 = R1 + R2 + R3
    R14 = R1 + R2 + R3 + R4
    R15 = R1 + R2 + R3 + R4 + R5
    R23 = R2 + R3
    R24 = R2 + R3 + R4
    R25 = R2 + R3 + R4 + R5
    R34 = R3 + R4
    R35 = R3 + R4 + R5
    R45 = R4 + R5
    R5 = R5

    CL = (R15 <= 1)
    C0 = (~CL) & (R1 > R25)
    C1 = (~CL) & (~C0) & (R12 > R35)
    C2 = (~CL) & (~C0) & (~C1) & (R23 > R1) & (R34 > R5)
    CU = (~CL) & (~C0) & (~C1) & (~C2)
    C = np.asarray([np.sum(CL),
                    np.sum(C0),
                    np.sum(C1),
                    np.sum(C2),
                    np.sum(CU)])
    
    eff[i, :] = C / n_events